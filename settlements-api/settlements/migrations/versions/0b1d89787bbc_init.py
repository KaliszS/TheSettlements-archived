"""init

Revision ID: 0b1d89787bbc
Revises:

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0b1d89787bbc"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cities_constructioninfo",
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cities_resource",
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table("games_campaign", sa.Column("id", sa.UUID(), nullable=False), sa.PrimaryKeyConstraint("id"))
    op.create_table(
        "users_user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=False),
        sa.Column("is_superuser", sa.BOOLEAN(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cities_construction",
        sa.Column("id", sa.SMALLINT(), nullable=False),
        sa.Column("level", sa.SMALLINT(), nullable=False),
        sa.Column("construction_time", sa.SMALLINT(), nullable=False),
        sa.Column("cost", postgresql.ARRAY(sa.INTEGER()), nullable=False),
        sa.Column("population_upkeep", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["cities_constructioninfo.id"],
        ),
        sa.PrimaryKeyConstraint("id", "level"),
    )
    op.create_table(
        "games_player",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("human", sa.BOOLEAN(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("campaign_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["campaign_id"],
            ["games_campaign.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cities_settlement",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("coord_x", sa.SMALLINT(), nullable=False),
        sa.Column("coord_y", sa.SMALLINT(), nullable=False),
        sa.Column("population", sa.INTEGER(), nullable=False),
        sa.Column("structures", postgresql.ARRAY(sa.SMALLINT()), nullable=False),
        sa.Column("resources", postgresql.ARRAY(sa.INTEGER()), nullable=False),
        sa.Column("units", postgresql.ARRAY(sa.INTEGER()), nullable=False),
        sa.Column("campaign_id", sa.UUID(), nullable=False),
        sa.Column("player_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["campaign_id"],
            ["games_campaign.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["games_player.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cities_settlement")
    op.drop_table("games_player")
    op.drop_table("cities_construction")
    op.drop_table("users_user")
    op.drop_table("games_campaign")
    op.drop_table("cities_resource")
    op.drop_table("cities_constructioninfo")
    # ### end Alembic commands ###
